infinite looping issues but keeps selecting
DO NOT PUT YOUR RADIO BUTTONS IN RADIO GROUPS- THAT WAS THE CAUSE THE WHOLE TIME

class SelectedHomeAdapter(
    private val context: Context,
    private var dataset: List<Home>,
    private val viewModel: SharedViewModel,
    private val viewLifecycleOwner: LifecycleOwner
) : RecyclerView.Adapter<SelectedHomeAdapter.ItemViewHolder>() {

    private var selectedPosition = RecyclerView.NO_POSITION

    private var selectedDataSet: MutableList<Home> = mutableListOf<Home>()

    init {
        setHasStableIds(true)
    }

    override fun getItemId(position: Int): Long {
        return dataset[position].itemId
    }

    inner class ItemViewHolder(private val view: View) : RecyclerView.ViewHolder(view) {

        val textView: TextView = view.findViewById(R.id.homeTextView)
        val radioButton: RadioButton = view.findViewById(R.id.homeRadioButton)

        init {
            radioButton.setOnCheckedChangeListener { buttonView, isChecked ->
                if (isChecked) {
                    val previousSelectedPosition = selectedPosition
                    selectedPosition = adapterPosition
                    radioButton.post {
                        println("SelectedHomeAdapter - onCheckedChangedListener -  selectedPosition: $selectedPosition")
                        println("SelectedHomeAdapter - onCheckedChangedListener -  isChecked: $isChecked")
                        println("SelectedHomeAdapter - onCheckedChangedListener -  adapterPosition: $adapterPosition")
                        notifyItemChanged(previousSelectedPosition)
                        notifyItemChanged(selectedPosition)
                    }
                }
            }
        }
    }

    fun setData(data: List<Home>) {
        dataset = data
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ItemViewHolder {
        val adapterLayout = LayoutInflater.from(parent.context)
            .inflate(R.layout.selected_list_item, parent, false)

        return ItemViewHolder(adapterLayout)
    }

    override fun onBindViewHolder(holder: ItemViewHolder, position: Int) {
        val item = dataset[position]
        holder.textView.text = context.resources.getString(item.stringResourceId)
        holder.radioButton.isChecked = position == selectedPosition

        println("SelectedHomeAdapter - onBindViewHolder - position: $position")
        println("SelectedHomeAdapter - onBindViewHolder - selectedPosition: $selectedPosition")
        println("SelectedHomeAdapter - onBindViewHolder - holder.radioButton.isChecked: ${holder.radioButton.isChecked}")
        println("SelectedHomeAdapter - onBindViewHolder - holder.layoutPosition: ${holder.layoutPosition}")
    }

    override fun getItemCount() = dataset.size
}
